---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: news
  POSTGRES_USER: db_user
  POSTGRES_PASSWORD: db_passwd
  PGDATA: /var/lib/postgresql/data
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-volume  # Sets PV's name
  labels:
    type: local  # Sets PV's type to local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi # Sets PV Volume
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/pgsql_data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim  # Sets name of PVC
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany  # Sets read and write access
  resources:
    requests:
      storage: 1Gi  # Sets volume size
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: prod-app
    service: database
    db-kind: postgresql
  name: testing-db
  namespace: default
spec:
  selector:
    matchLabels:
      app: prod-app
      service: database
      db-kind: postgresql
  serviceName: postgres
  replicas: 1
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app: prod-app
        service: database
        db-kind: postgresql
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: postgres
          image: postgres:13-alpine # Sets Image
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432  # Exposes container port
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
